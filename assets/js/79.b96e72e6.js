(window.webpackJsonp=window.webpackJsonp||[]).push([[79],{395:function(t,e,v){"use strict";v.r(e);var _=v(7),l=Object(_.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"size"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#size"}},[t._v("#")]),t._v(" size()")]),t._v(" "),e("p",[t._v("size(a)表示矩阵每一个维度的长度\n在 python 中使用"),e("code",[t._v("np.array(a).shape")])]),t._v(" "),e("blockquote",[e("p",[t._v("注意：在 python 中，"),e("code",[t._v("np.size(A)")]),t._v("表示 A 中所有数据个数")])]),t._v(" "),e("h2",{attrs:{id:"length"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#length"}},[t._v("#")]),t._v(" length()")]),t._v(" "),e("p",[t._v("length(a)表示矩阵 a 的最大的长度，即 max(size(a))\n在 python 中使用"),e("code",[t._v("max(np.array(a).shape)")])]),t._v(" "),e("h2",{attrs:{id:"ndims"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ndims"}},[t._v("#")]),t._v(" ndims()")]),t._v(" "),e("p",[t._v("ndims(a)表示矩阵 a 的维数，即 length(size(a))；如二维矩阵，三维矩阵等\n在 python 中，使用"),e("code",[t._v("len(np.array(a).shape)")])]),t._v(" "),e("h2",{attrs:{id:"zeros"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#zeros"}},[t._v("#")]),t._v(" zeros()")]),t._v(" "),e("p",[t._v("生成全为 0 的矩阵：")]),t._v(" "),e("ul",[e("li",[t._v("B=zeros(n)：生成 n×n 全零阵。")]),t._v(" "),e("li",[t._v("B=zeros(m,n)：生成 m×n 全零阵。")]),t._v(" "),e("li",[t._v("B=zeros([m n])：生成 m×n 全零阵。")]),t._v(" "),e("li",[t._v("B=zeros(d1,d2,d3……)：生成 d1×d2×d3×……全零阵或数组。")]),t._v(" "),e("li",[t._v("B=zeros([d1 d2 d3……])：生成 d1×d2×d3×……全零阵或数组。")]),t._v(" "),e("li",[t._v("B=zeros(size(A))：生成与矩阵 A 相同大小的全零阵。")])]),t._v(" "),e("p",[t._v("在 python 中，有"),e("code",[t._v('np.zeros(shape, dtype=float, order="C")')]),t._v("\n参数：")]),t._v(" "),e("ul",[e("li",[t._v("shape:形状")]),t._v(" "),e("li",[t._v("dtype: 数据类型，可选参数，默认 numpy.float64")]),t._v(" "),e("li",[t._v("dtype 类型：\n"),e("ul",[e("li",[t._v("t,位域,如 t4 代表 4 位")]),t._v(" "),e("li",[t._v("b,布尔值，true or false")]),t._v(" "),e("li",[t._v("i,整数,如 i8(64 位）")]),t._v(" "),e("li",[t._v("u,无符号整数，u8(64 位）")]),t._v(" "),e("li",[t._v("f,浮点数，f8（64 位）")]),t._v(" "),e("li",[t._v("c,浮点负数，")]),t._v(" "),e("li",[t._v("o,对象，")]),t._v(" "),e("li",[t._v("s,a，字符串，s24")]),t._v(" "),e("li",[t._v("u,unicode,u24")])])]),t._v(" "),e("li",[t._v("order:可选参数，c 代表与 c 语言类似，行优先；F 代表列优先")])]),t._v(" "),e("h2",{attrs:{id:"ones"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ones"}},[t._v("#")]),t._v(" ones()")]),t._v(" "),e("p",[t._v("生成全为 1 的矩阵，用法与 zeros 类似")]),t._v(" "),e("h2",{attrs:{id:"矩阵下标引用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#矩阵下标引用"}},[t._v("#")]),t._v(" 矩阵下标引用")]),t._v(" "),e("p",[t._v("参考："),e("a",{attrs:{href:"https://cloud.tencent.com/developer/article/2103127",target:"_blank",rel:"noopener noreferrer"}},[t._v("matlab 矩阵大全"),e("OutboundLink")],1)]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"left"}},[t._v("matlab 表达式")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("函数功能")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("A(1)")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("将二维矩阵 A 重组为一维数组，返回数组中第一个元素")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("A(:, j)")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("返回二维矩阵 A 中第 j 列 列向量")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("A(i, :)")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("返回二维矩阵 A 中第 i 行 行向量")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("A(:, j:k)")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("返回二维矩阵 A 中第 j 列到第 k 列 列向量组成的子矩阵")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("A(i:k, :)")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("返回二维矩阵 A 中第 i 行到第 k 行 行向量组成的子矩阵")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("A(i:k, j:m)")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("返回二维矩阵 A 中第 i 行到第 k 行 行向量和第 j 列到第 m 列 列向量的交集组成的子矩阵")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("A(:)")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("将二维矩阵 A 中得每列合并成一个列向量")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("A(j:k)")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("返回一个行向量，其元素为 A(:)中的第 j 个元素到第 k 个元素")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("A([j1 j2 ...])")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("返回一个行向量，其元素为 A(:)中的第 j1，j2…个元素")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("A(:, [j1 j2 ...])")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("返回矩阵 A 的第 j1 列、第 j2 列等的列向量")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("A([i1 i2 ...], :)")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("返回矩阵 A 的第 i1 行、第 i2 行等的行向量")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("A([i1 i2 ...], [j1 j2 ...])")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("返回矩阵 A 的第 j1 列、第 j2 列等和矩阵 A 的第 i1 行、第 i2 行等的元素")])])])]),t._v(" "),e("h2",{attrs:{id:"多维数组变一维"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#多维数组变一维"}},[t._v("#")]),t._v(" 多维数组变一维")]),t._v(" "),e("p",[t._v("matlab: "),e("code",[t._v("A(:)")]),t._v("\npython: "),e("code",[t._v("arr.flatten()")])]),t._v(" "),e("h2",{attrs:{id:"向量范数和矩阵范数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#向量范数和矩阵范数"}},[t._v("#")]),t._v(" 向量范数和矩阵范数")]),t._v(" "),e("p",[t._v("matlab:")]),t._v(" "),e("ul",[e("li",[t._v("n = norm(v) 返回向量 v 的欧几里德范数。此范数也称为 2-范数、向量模或欧几里德长度。")]),t._v(" "),e("li",[t._v("n = norm(v,p) 返回广义向量 p 范数。")]),t._v(" "),e("li",[t._v("n = norm(X) 返回矩阵 X 的 2-范数或最大奇异值，该值近似于 max(svd(X))。")]),t._v(" "),e("li",[t._v("n = norm(X,p) 返回矩阵 X 的 p-范数，其中 p 为 1、2 或 Inf：\n"),e("ul",[e("li",[t._v("如果 p = 1，则 n 是矩阵的最大绝对列之和。")]),t._v(" "),e("li",[t._v("如果 p = 2，则 n 近似于 max(svd(X))。此值等效于 norm(X)。")]),t._v(" "),e("li",[t._v("如果 p = Inf，则 n 是矩阵的最大绝对行之和。")])])]),t._v(" "),e("li",[t._v('n = norm(X,"fro") 返回矩阵或数组 X 的 Frobenius 范数。')])]),t._v(" "),e("p",[t._v("python: "),e("code",[t._v("x_norm=np.linalg.norm(x, ord=None, axis=None, keepdims=False)")])]),t._v(" "),e("ul",[e("li",[t._v("x: 表示矩阵（也可以是一维）")]),t._v(" "),e("li",[t._v("ord：范数类型\n"),e("ul",[e("li",[t._v("ord = 1\n"),e("ul",[e("li",[t._v("向量的范数表示一范数")]),t._v(" "),e("li",[t._v("矩阵的范数表示列和的最大值")])])]),t._v(" "),e("li",[t._v("ord = 2\n"),e("ul",[e("li",[t._v("向量的范数表示二范数（默认）")]),t._v(" "),e("li",[t._v("矩阵的范数表示|λE-ATA|=0，求特征值，然后求最大特征值得算术平方根")])])]),t._v(" "),e("li",[t._v("ord = np.inf\n"),e("ul",[e("li",[t._v("向量的范数表示无穷范数")]),t._v(" "),e("li",[t._v("矩阵的范数表示行和的最大值")])])])])]),t._v(" "),e("li",[t._v("axis：处理类型\n"),e("ul",[e("li",[t._v("axis=1 表示按行向量处理，求多个行向量的范数")]),t._v(" "),e("li",[t._v("axis=0 表示按列向量处理，求多个列向量的范数")]),t._v(" "),e("li",[t._v("axis=None 表示矩阵范数。")])])]),t._v(" "),e("li",[t._v("keepding：是否保持矩阵的二维特性\n"),e("ul",[e("li",[t._v("True 表示保持矩阵的二维特性，False 相反")])])])])])}),[],!1,null,null,null);e.default=l.exports}}]);