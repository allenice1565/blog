(window.webpackJsonp=window.webpackJsonp||[]).push([[96],{412:function(a,s,t){"use strict";t.r(s);var e=t(7),r=Object(e.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h2",{attrs:{id:"修补提交"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#修补提交"}},[a._v("#")]),a._v(" 修补提交")]),a._v(" "),s("p",[a._v("如果在本地开发，刚提交完发现还有几个文件没有添加，可以使用"),s("code",[a._v("git commit --amend")]),a._v("进行修补")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" commit "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-m")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'initial commit'")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" forgotten_file\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" commit "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--amend")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("p",[a._v("最终您只会有一个提交——第二次提交将代替第一次提交的结果。")]),a._v(" "),s("h2",{attrs:{id:"查看提交历史"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查看提交历史"}},[a._v("#")]),a._v(" 查看提交历史")]),a._v(" "),s("p",[a._v("命令："),s("code",[a._v("git log")]),a._v("\n可以使用"),s("code",[a._v("git log --pretty=oneline")]),a._v("显示一行提交信息")]),a._v(" "),s("h2",{attrs:{id:"撤销对文件的修改"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#撤销对文件的修改"}},[a._v("#")]),a._v(" 撤销对文件的修改")]),a._v(" "),s("p",[s("code",[a._v("git checkout -- <file>")]),a._v(" 可以丢弃"),s("strong",[a._v("工作区")]),a._v("的修改:")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout -- "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("file"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("blockquote",[s("p",[a._v("请务必记得 git checkout -- "),s("file",[a._v(" 是一个危险的命令。您对那个文件在本地的任何修改都会消失——Git 会用最近提交的版本覆盖掉它。\n除非您确实清楚不想要对那个文件的本地修改了，否则请不要使用这个命令。")])],1)]),a._v(" "),s("h3",{attrs:{id:"取消暂存的文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#取消暂存的文件"}},[a._v("#")]),a._v(" 取消暂存的文件")]),a._v(" "),s("p",[s("code",[a._v("git reset HEAD <file>")]),a._v(" 可以把暂存区的修改撤销掉(unstage)，重新放回工作区。\n"),s("code",[a._v("git reset")]),a._v(" 命令既可以回退版本，也可以把暂存区的修改回退到工作区。当我们用 HEAD 时，表示当前的指针(最新的版本)。")]),a._v(" "),s("blockquote",[s("p",[a._v("那么如果您想要丢弃工作区和暂存区全部更改呢? 不要忘了 HEAD 就是当前指针，所以")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" reset "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--hard")]),a._v(" HEAD\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("就是丢弃工作区与暂存区的全部文件啦")])]),a._v(" "),s("h2",{attrs:{id:"版本回滚"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#版本回滚"}},[a._v("#")]),a._v(" 版本回滚")]),a._v(" "),s("p",[s("code",[a._v("git reset")]),a._v("用于版本回退，回退后，前面的提交会消失\n"),s("code",[a._v("git revert")]),a._v("用于回撤某一次提交，会生成新的提交")]),a._v(" "),s("h3",{attrs:{id:"git-reset"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-reset"}},[a._v("#")]),a._v(" git reset")]),a._v(" "),s("p",[s("code",[a._v("git reset")]),a._v(" 命令是在更改 git 指针 HEAD 的指向，具体是更改指向不同的版本号。")]),a._v(" "),s("p",[a._v("想要用好 reset 命令，必须理解三个参数"),s("code",[a._v("--soft --mixed(默认) --hard")])]),a._v(" "),s("h4",{attrs:{id:"三个参数-soft-mixed-默认-hard"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三个参数-soft-mixed-默认-hard"}},[a._v("#")]),a._v(" 三个参数"),s("code",[a._v("--soft --mixed(默认) --hard")])]),a._v(" "),s("p",[s("strong",[a._v("--soft 参数")])]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" reset "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--soft")]),a._v(" commitId\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("soft 参数的作用是：将本地仓库回滚到 commitId 版本，暂存区和工作区保持不变。\n"),s("strong",[a._v("--mixed 参数")])]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" reset "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--mixed")]),a._v(" commitId 或者 "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" reset commitId\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("mixed 参数的作用是：将本地仓库和暂存区回滚到 commitId 版本，工作区保持不变。\n"),s("strong",[a._v("--hard 参数")])]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" reset "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--hard")]),a._v(" commitId\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("hard 参数的作用是：将本地仓库和暂存区、工作区都回滚到 commitId 版本")]),a._v(" "),s("blockquote",[s("p",[a._v("注意：工作区还有未提交的代码不要使用这个命令，因为工作区会回滚，没有提交的代码会消失。"),s("mark",[a._v("可以使用 git stash 暂存工作区，避免回滚导致修改的代码消失")])])]),a._v(" "),s("h4",{attrs:{id:"使用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用场景"}},[a._v("#")]),a._v(" 使用场景")]),a._v(" "),s("p",[a._v("具体使用的时候，要分清的就是用哪个参数最合适，下面举几个例子。"),s("strong",[a._v("再次提醒")]),a._v("，工作区有未提交的改动时，不要用--hard 参数。")]),a._v(" "),s("ol",[s("li",[s("p",[a._v("如何撤销上一次 push？\n此时用--soft 参数比较合适，只回滚本地仓到上一个版本，然后通过 git push -f 命令，撤销上次的 push，最后更改好代码后重新 push")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("// ① 将本地仓回滚到上一个版本号\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" reset "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--soft")]),a._v(" HEAD~1\n// ② 通过-f 命令，将回滚后的版本号强制推送上去，\n// 相当于撤销了最新的 push\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" push origin master "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br")])])]),a._v(" "),s("li",[s("p",[a._v("如何撤销一次 commit？\n如果你要同时撤销暂存区的话，就用--mixed 参数，如果要撤销工作区的修改就用--hard 参数，否则用--soft 最安全。")])])]),a._v(" "),s("h3",{attrs:{id:"git-revert"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-revert"}},[a._v("#")]),a._v(" git revert")]),a._v(" "),s("p",[a._v("参考文章："),s("a",{attrs:{href:"https://blog.csdn.net/liuxiao723846/article/details/122691779",target:"_blank",rel:"noopener noreferrer"}},[a._v("Git 之 revert"),s("OutboundLink")],1)]),a._v(" "),s("blockquote",[s("p",[s("code",[a._v("git revert")]),a._v("用于撤销指定提交的内容，撤销后会生成一个新的 commit")])]),a._v(" "),s("p",[a._v("使用"),s("code",[a._v("git show")]),a._v("可以查看 commit 详细信息")]),a._v(" "),s("ol",[s("li",[a._v("普通 commit"),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" show 3e853bd\ncommit 3e853bdcb2d8ce45be87d4f902c0ff6ad00f240a\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])])]),a._v(" "),s("li",[a._v("merge commit"),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" show bd86846\n commit bd868465569400a6b9408050643e5949e8f2b8f5\n Merge: ba25a9d 1c7036f\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),a._v("这代表该 merge commit 是从 ba25a9d 和 1c7036f 两个 commit 合并过来的。\n而常规的 commit 则没有 Merge 行")])]),a._v(" "),s("h4",{attrs:{id:"撤销普通-commit"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#撤销普通-commit"}},[a._v("#")]),a._v(" 撤销普通 commit")]),a._v(" "),s("p",[a._v("直接使用"),s("code",[a._v("git revert commitId")])]),a._v(" "),s("h4",{attrs:{id:"撤销-merge-commit"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#撤销-merge-commit"}},[a._v("#")]),a._v(" 撤销 merge commit")]),a._v(" "),s("p",[a._v("如果直接使用 "),s("code",[a._v("git revert <commit id>")]),a._v('，git 也不知道到底要撤除哪一条分支上的内容，这时需要指定一个 parent number 标识出"主线"，主线的内容将会保留，而另一条分支的内容将被 revert。')]),a._v(" "),s("p",[a._v("从 git show 命令的结果中可以看到，merge commit 的 parent 分别为 ba25a9d 和 1c7036f，其中 ba25a9d 代表 master 分支（从图中可以看出），1c7036f 代表 will-be-revert 分支。需要注意的是"),s("mark",[a._v(" -m 选项接收的参数是一个数字，数字取值为 1 和 2")]),a._v("，也就是 Merge 行里面列出来的第一个还是第二个，其含义用来保留某个分支。")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" revert "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-m")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" bd86846\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("h3",{attrs:{id:"revert-之后重新上线"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#revert-之后重新上线"}},[a._v("#")]),a._v(" revert 之后重新上线")]),a._v(" "),s("p",[a._v("参考文章："),s("a",{attrs:{href:"https://blog.csdn.net/liuxiao723846/article/details/122691779",target:"_blank",rel:"noopener noreferrer"}},[a._v("Git 之 revert"),s("OutboundLink")],1),a._v("\n假设狗蛋在自己分支 goudan/a-cool-feature 上开发了一个功能，并合并到了 master 上，之后 master 上又提交了一个修改 h，这时提交历史如下：")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("a -"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" b -"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" c -"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" f -- g -"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" h "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("master"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n           "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("      /\n            d -"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" e   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("goudan/a-cool-feature"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("p",[a._v("突然，大家发现狗蛋的分支存在严重的 bug，需要 revert 掉，于是大家把 g 这个 merge commit revert 掉了，记为 G，如下：")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("a -"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" b -"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" c -"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" f -- g -"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" h -"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" G "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("master"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n           "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("      /\n            d -"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" e   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("goudan/a-cool-feature"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("p",[a._v("然后狗蛋回到自己的分支进行 bugfix，修好之后想重新合并到 master，直觉上只需要再 merge 到 master 即可（或者使用 cherry-pick），像这样：")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("a -"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" b -"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" c -"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" f -- g -"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" h -"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" G -"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" i "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("master"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n           "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("      /               /\n            d -"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" e -"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" j -"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" k ----    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("goudan/a-cool-feature"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("p",[a._v("i 是新的 merge commit。但需要注意的是，这 "),s("strong",[a._v("不能")]),a._v(" 得到我们期望的结果。因为 d 和 e 两个提交曾经被丢弃过，如此合并到 master 的代码，并不会重新包含 d 和 e 两个提交的内容，相当于只有 goudan/a-cool-feature 上的新 commit 被合并了进来，而 goudan/a-cool-feature 分支之前的内容，依然是被 revert 掉了。")]),a._v(" "),s("p",[a._v("所以，如果想恢复整个 goudan/a-cool-feature 所做的修改，应该先把 G revert 掉：")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("a -"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" b -"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" c -"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" f -- g -"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" h -"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" G -"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" G' -"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" i "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("master"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n           "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("      /                     /\n            d -"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" e -"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" j -"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" k ----------    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("goudan/a-cool-feature"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("p",[a._v("其中 G' 是对 G 的 revert 操作生成的 commit，把之前撤销合并时丢弃的代码恢复了回来，然后再 merge 狗蛋的分支，把解决 bug 写的新代码合并到 master 分支。")])])}),[],!1,null,null,null);s.default=r.exports}}]);